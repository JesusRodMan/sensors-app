// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  password   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  registers  Json[]
  UserRoles  UserRoles[]
  entrenador User?       @relation("EntrenadorClientes", fields: [entrenadorId], references: [id])
  entrenadorId Int?
  clientes   User[]      @relation("EntrenadorClientes")
}

model Role {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  name      String      @unique
  initUrl   String?
  UserRoles UserRoles[]
}

model UserRoles {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])
}

model Group {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  muscles  Muscle[]
}

model Muscle {
  id        Int     @id @default(autoincrement())
  name      String
  image     String
  muscleId  String  @unique
  groupId   Int
  group     Group   @relation(fields: [groupId], references: [id])
  areas     Area[]
}

model Area {
  id        Int     @id @default(autoincrement())
  name      String
  image     String
  muscleId  Int
  muscle    Muscle  @relation(fields: [muscleId], references: [id])
}
